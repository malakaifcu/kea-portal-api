// <auto-generated />
using System;
using LoanPortalAPIDev.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LoanPortalAPIDev.Migrations
{
    [DbContext(typeof(AppPostgresDbContext))]
    [Migration("20240319222742_AlteredLiabilityTableAndListClasses")]
    partial class AlteredLiabilityTableAndListClasses
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LoanPortalAPIDev.Data.PQLC_Loan", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("actionedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("applicationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("applicationName")
                        .HasColumnType("text");

                    b.Property<string>("clientNumber")
                        .HasColumnType("text");

                    b.Property<double>("existingLoanBalance")
                        .HasColumnType("double precision");

                    b.Property<decimal>("financeRate")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("firstPaymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("householdAdult")
                        .HasColumnType("integer");

                    b.Property<int>("householdDependants")
                        .HasColumnType("integer");

                    b.Property<double>("instalmentAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("instalmentFrequency")
                        .HasColumnType("text");

                    b.Property<double>("interestAccrued")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("lastSavedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("loanProduct")
                        .HasColumnType("text");

                    b.Property<int>("loanTerm")
                        .HasColumnType("integer");

                    b.Property<DateTime>("maturityDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("proposedLoanBalance")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("termType")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("PQLC_Loans");
                });

            modelBuilder.Entity("LoanPortalAPIDev.Data.PQLC_Loan+Assets", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PQLC_LoanID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("appID")
                        .HasColumnType("uuid");

                    b.Property<double>("assetAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("assetType")
                        .HasColumnType("text");

                    b.Property<string>("customDescription")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("PQLC_LoanID");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("LoanPortalAPIDev.Data.PQLC_Loan+Expense", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PQLC_LoanID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("appID")
                        .HasColumnType("uuid");

                    b.Property<string>("customDescription")
                        .HasColumnType("text");

                    b.Property<double>("expenseAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("expenseFrequency")
                        .HasColumnType("text");

                    b.Property<string>("expenseType")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("PQLC_LoanID");

                    b.ToTable("Expense");
                });

            modelBuilder.Entity("LoanPortalAPIDev.Data.PQLC_Loan+Income", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PQLC_LoanID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("appID")
                        .HasColumnType("uuid");

                    b.Property<string>("customDescription")
                        .HasColumnType("text");

                    b.Property<double>("incomeAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("incomeFrequency")
                        .HasColumnType("text");

                    b.Property<string>("incomeType")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("PQLC_LoanID");

                    b.ToTable("Income");
                });

            modelBuilder.Entity("LoanPortalAPIDev.Data.PQLC_Loan+Liabilities", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PQLC_LoanID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("appID")
                        .HasColumnType("uuid");

                    b.Property<bool>("consolidate")
                        .HasColumnType("boolean");

                    b.Property<double>("creditLimit")
                        .HasColumnType("double precision");

                    b.Property<string>("customDescription")
                        .HasColumnType("text");

                    b.Property<double>("liabilityAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("liabilityAmountFreq")
                        .HasColumnType("text");

                    b.Property<string>("liabilityType")
                        .HasColumnType("text");

                    b.Property<double>("outstandingBalance")
                        .HasColumnType("double precision");

                    b.HasKey("ID");

                    b.HasIndex("PQLC_LoanID");

                    b.ToTable("Liabilities");
                });

            modelBuilder.Entity("LoanPortalAPIDev.Data.PQLC_Loan+Assets", b =>
                {
                    b.HasOne("LoanPortalAPIDev.Data.PQLC_Loan", null)
                        .WithMany("assets")
                        .HasForeignKey("PQLC_LoanID");
                });

            modelBuilder.Entity("LoanPortalAPIDev.Data.PQLC_Loan+Expense", b =>
                {
                    b.HasOne("LoanPortalAPIDev.Data.PQLC_Loan", null)
                        .WithMany("expenses")
                        .HasForeignKey("PQLC_LoanID");
                });

            modelBuilder.Entity("LoanPortalAPIDev.Data.PQLC_Loan+Income", b =>
                {
                    b.HasOne("LoanPortalAPIDev.Data.PQLC_Loan", null)
                        .WithMany("income")
                        .HasForeignKey("PQLC_LoanID");
                });

            modelBuilder.Entity("LoanPortalAPIDev.Data.PQLC_Loan+Liabilities", b =>
                {
                    b.HasOne("LoanPortalAPIDev.Data.PQLC_Loan", null)
                        .WithMany("liabilities")
                        .HasForeignKey("PQLC_LoanID");
                });

            modelBuilder.Entity("LoanPortalAPIDev.Data.PQLC_Loan", b =>
                {
                    b.Navigation("assets");

                    b.Navigation("expenses");

                    b.Navigation("income");

                    b.Navigation("liabilities");
                });
#pragma warning restore 612, 618
        }
    }
}

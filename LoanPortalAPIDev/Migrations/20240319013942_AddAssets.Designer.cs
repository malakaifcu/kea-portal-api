// <auto-generated />
using System;
using LoanPortalAPIDev.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LoanPortalAPIDev.Migrations
{
    [DbContext(typeof(AppPostgresDbContext))]
    [Migration("20240319013942_AddAssets")]
    partial class AddAssets
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LoanPortalAPIDev.Data.PQLC_Loan", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("actionedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("applicationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("applicationName")
                        .HasColumnType("text");

                    b.Property<Guid?>("assetsassetId")
                        .HasColumnType("uuid");

                    b.Property<string>("clientNumber")
                        .HasColumnType("text");

                    b.Property<double>("existingLoanBalance")
                        .HasColumnType("double precision");

                    b.Property<decimal>("financeRate")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("firstPaymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("householdAdult")
                        .HasColumnType("integer");

                    b.Property<int>("householdDependants")
                        .HasColumnType("integer");

                    b.Property<double>("instalmentAmount")
                        .HasColumnType("double precision");

                    b.Property<string>("instalmentFrequency")
                        .HasColumnType("text");

                    b.Property<double>("interestAccrued")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("lastSavedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("loanProduct")
                        .HasColumnType("text");

                    b.Property<int>("loanTerm")
                        .HasColumnType("integer");

                    b.Property<DateTime>("maturityDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("proposedLoanBalance")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("termType")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("assetsassetId");

                    b.ToTable("PQLC_Loans");
                });

            modelBuilder.Entity("LoanPortalAPIDev.Data.PQLC_Loan+Assets", b =>
                {
                    b.Property<Guid>("assetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AL_Type")
                        .HasColumnType("text");

                    b.Property<string>("AL_Type_code")
                        .HasColumnType("text");

                    b.Property<double>("AL_amount")
                        .HasColumnType("double precision");

                    b.Property<Guid>("ID")
                        .HasColumnType("uuid");

                    b.Property<Guid>("appID")
                        .HasColumnType("uuid");

                    b.Property<bool>("consolidate")
                        .HasColumnType("boolean");

                    b.Property<double>("creditLimit")
                        .HasColumnType("double precision");

                    b.Property<string>("customDescription")
                        .HasColumnType("text");

                    b.Property<double>("outstandingBalance")
                        .HasColumnType("double precision");

                    b.HasKey("assetId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("LoanPortalAPIDev.Data.PQLC_Loan", b =>
                {
                    b.HasOne("LoanPortalAPIDev.Data.PQLC_Loan+Assets", "assets")
                        .WithMany()
                        .HasForeignKey("assetsassetId");

                    b.Navigation("assets");
                });
#pragma warning restore 612, 618
        }
    }
}
